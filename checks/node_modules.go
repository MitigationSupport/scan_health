package checks

import (
	"fmt"
	"github.com/antfie/scan_health/v2/report"
	"github.com/antfie/scan_health/v2/utils"
	"strings"
)

// Test cases
// https://analysiscenter.veracode.com/auth/index.jsp#StaticOverview::906008:24693294:24664441:24680091::::

func nodeModules(r *report.Report) {
	var foundFiles []string

	for index, module := range r.Modules {
		if strings.Contains(strings.ToLower(module.Name), "_nodemodule_") {
			if !utils.IsStringInStringArray(module.Name, foundFiles) {
				foundFiles = append(foundFiles, module.Name)
			}

			r.Modules[index].MarkThirdParty()
			r.Modules[index].MarkIgnored()
		}
	}

	if len(foundFiles) == 0 {
		return
	}

	issueDescription := "The presence of \"node_modules\" folders in the upload can result in a large upload size and excess modules displayed."
	severity := report.IssueSeverityMedium
	message := fmt.Sprintf("A \"node_modules\" folder was uploaded: \"%s\" %s", foundFiles[0], issueDescription)

	if len(foundFiles) > 1 {
		message = fmt.Sprintf(
			"%d \"node_modules\" folders were uploaded: %s %s.",
			len(foundFiles),
			utils.Top5StringList(foundFiles), issueDescription)
	}

	r.ReportFileIssue(message, severity, foundFiles)
	r.MakeRecommendation("Do not upload any \"node_modules\" folders unless they contain modules that cannot be found within public repositories. Instead supply the package.json, package-lock.json, or npm-shrinkwrap.json files as per the packaging documentation: https://docs.veracode.com/r/compilation_jscript.")
}
